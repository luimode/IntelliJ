<templateSet group="JavaScript">
  <template name="action" value="export const $TYPE$_ACTION = '$TYPE$_ACTION';&#10;&#10;export function $FUNCTION_NAME$Action() {&#10;    return {&#10;        type: $TYPE$_ACTION,&#10;    }&#10;}" description="Create an action" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="paramaction" value="export const $TYPE$_ACTION = '$TYPE$_ACTION';&#10;&#10;export function $FUNCTION_NAME$Action($PARAM$) {&#10;    return {&#10;        type: $TYPE$_ACTION,&#10;        payload: $PARAM$,&#10;    }&#10;}" description="Create a parametrized action" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clog" value="console.log('$END$');" description="console log" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dumbcomp" value="import React, {Component} from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;export default class $CLASS_NAME$ extends Component {&#10;&#10;   render() {&#10;        $END$&#10;    }&#10;&#10;}&#10;&#10;$CLASS_NAME$.propTypes = {};" description="Skeleton of a dumb component" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="camelCase(String)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cont" value="import React, {Component} from 'react';&#10;import PropTypes from 'prop-types';&#10;import {connect} from 'react-redux';&#10;&#10;export class $CLASS_NAME$ extends Component {&#10;&#10;   render() {&#10;        $END$&#10;    }&#10;&#10;}&#10;&#10;$CLASS_NAME$.propTypes = {};&#10;&#10;function mapStateToProps(state, ownProps) {&#10;    return {&#10;        &#10;   };&#10;}&#10;&#10;function mapDispatchToProps(dispatch) {&#10;    return {&#10;        &#10;   };&#10;}&#10;&#10;export default connect(mapStateToProps, mapDispatchToProps)($CLASS_NAME$);" description="Create an empty container" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="camelCase(String)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jstr" value="JSON.stringify($END$)" description="JSON stringify" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>